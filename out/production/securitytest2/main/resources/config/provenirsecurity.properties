#######
# Example Client Configuration
# required properties - indicates the following properties are required whether legacy or post 1.0.
# post 1.0 properties - indicates the following properties are for post 1.0 only.
# legacy properties - indicates the following properties are for legacy only.
#######

#######
# required properties
#######

# currentKey indicates which key currently used for encryption.  possibleKeys is list of all possible keys.
currentKey=2
possibleKeys=1,2

Key1-1enc=src/main/resources/keys/Key1enc.key
Key2-1=src/main/resources/keys/Key2.key

Key1-2enc=src/main/resources/keys/Key2-1enc.key
Key2-2=src/main/resources/keys/Key2-2.key

######
# Salt and Pepper information for hashing the different hash methods (i.e. CC, BANK, ID, PASSWORD).
# Pepper files should be encrypted with current client secret.  These hashing properties are for
# post 1.0 configurations only.
#######
hash.0.algorithm=SHA-1
hash.1.algorithm=SHA-512
hash.1.pepperFile=pepper/pepper1enc
hash.2.algorithm=SHA-512
hash.2.pepperFile=pepper/pepper2enc
hash.3.algorithm=SHA-512
hash.3.pepperFile=pepper/pepper3enc
hash.4.algorithm=SHA-512
hash.4.pepperFile=pepper/pepper4enc
hash.4.randomSaltSize=16

######
# Digital Signatures.  Private keys should be encrypted with current client secret.  These
# properties are for post 1.0 configurations only.
#######
#digitalSignature.encryptedPrivateKey.accessToken=keys/accessTokenPrivEnc
#digitalSignature.encryptedPrivateKey.refreshToken=keys/refreshTokenPrivEnc

securityServiceBaseUrl=http://localhost:8080/api

#######
# legacy properties
#######

# baseURL and backupUrl are for socket server implementation.
baseUrl=localhost
backupUrl=localhost

# Check for encryption preference (socket or servlet).  If it is "socket", legacy calls will go to legacy socket server.
# It will go to REST endpoint otherwise.
encryptionMethod=socket
secureSocketEncryption=false
encryptionTimeout=5000
binaryEncryptionTimeout=15000
numEncryptionAttempts=10